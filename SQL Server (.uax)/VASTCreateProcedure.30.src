-- =============================================
-- Author:		<Dexter Zafra>
-- Create date: <6/6/2008>
-- Description:	<Returns Category Articles custom paging and bidirectional dynamic sorting>
-- =============================================
CREATE PROCEDURE [dbo].[GetCategoryArticle] 

@CATID int,
@OrderBy int = '',
@SortBy int = '',
@PageIndex int = 1,
@PageSize int = 20

AS
BEGIN

DECLARE @StartRow int
DECLARE @EndRow int

SET @StartRow = (@PageSize * (@PageIndex - 1))  + 1  
SET @EndRow = @PageSize * @PageIndex + 1

SET NOCOUNT ON;

WITH ArticleCategory AS
(
    SELECT
       ROW_NUMBER() OVER 
         (
            -- Dynamic bidirectional sorting
            ORDER BY 
                  CASE WHEN @OrderBy = 1 AND @SortBy = 1 THEN a.Hits END DESC,
                  CASE WHEN @OrderBy = 1 AND @SortBy = '' THEN a.Hits END DESC,
                  CASE WHEN @OrderBy = 1 AND @SortBy = 2 THEN a.Hits END ASC,
                  CASE WHEN @OrderBy = 2 AND @SortBy = 1 THEN a.No_Rates END DESC,
                  CASE WHEN @OrderBy = 2 AND @SortBy = '' THEN a.No_Rates END DESC,
                  CASE WHEN @OrderBy = 2 AND @SortBy = 2 THEN a.No_Rates END ASC,
                  CASE WHEN @OrderBy = 3 AND @SortBy = 2 THEN a.Title END ASC,
                  CASE WHEN @OrderBy = 3 AND @SortBy = '' THEN a.Title END ASC,
                  CASE WHEN @OrderBy = 3 AND @SortBy = 1 THEN a.Title END DESC,
                  CASE WHEN @OrderBy = 4 AND @SortBy = 1 OR @OrderBy = '' THEN a.Post_Date END DESC,
                  CASE WHEN @OrderBy = 4 AND @SortBy = '' OR @OrderBy = '' THEN a.Post_Date END DESC,
                  CASE WHEN @OrderBy = 4 AND @SortBy = 2 THEN a.Post_Date END ASC
         ) AS RowNumber, 
              a.ID,
              a.CAT_ID,
              b.CAT_NAME, 
              a.Title, 
              a.Post_Date, 
              a.Content, 
              a.Hits, 
              a.Author,
              a.Keyword,
              a.No_Rates,
              a.UID, 
              CAST((1.0 * a.No_Rating/a.No_Rates) as decimal(2,1)) as Rates,
              dbo.GetCategoryArticleCount(@CATID) As RCount, 
              a.Summary,
              a.Total_Comments        
       FROM Cooking_Article a WITH (NOLOCK) 
            INNER JOIN Cooking_Article_Category b WITH (NOLOCK)
       ON 
            a.CAT_ID = b.CAT_ID
       WHERE a.Show = 1 AND a.CAT_ID = @CATID
)
-- Statement that executes the CTE
SELECT a.*
FROM
      ArticleCategory a
WHERE
      a.RowNumber BETWEEN @StartRow AND @EndRow - 1
ORDER BY
      a.RowNumber

END

		